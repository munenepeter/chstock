<?php

class RequisitionOrder {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    public function create($departmentId, $items) {
        $this->db->beginTransaction();
        try {
            // Insert RO (ro_number will be auto-generated by trigger)
            $stmt = $this->db->prepare("
                INSERT INTO requisition_orders (department_id, total_amount)
                VALUES (?, 0)
            ");
            $stmt->execute([$departmentId]);

            // Get the generated ro_number using a SELECT query
            $stmt = $this->db->prepare("
                SELECT ro_number 
                FROM requisition_orders 
                WHERE department_id = ? 
                ORDER BY created_at DESC 
                LIMIT 1
            ");
            $stmt->execute([$departmentId]);
            $roNumber = $stmt->fetchColumn();

            if (!$roNumber) {
                throw new Exception("Failed to retrieve RO number");
            }

            $totalAmount = 0;

            // Insert items and calculate total
            foreach ($items as $item) {
                $stmt = $this->db->prepare("
                    INSERT INTO requisition_items (ro_number, item_id, quantity, unit_price, total_price)
                    VALUES (?, ?, ?, ?, ?)
                ");

                $totalPrice = $item['quantity'] * $item['unit_price'];
                $totalAmount += $totalPrice;

                $stmt->execute([
                    $roNumber,
                    $item['item_id'],
                    $item['quantity'],
                    $item['unit_price'],
                    $totalPrice
                ]);
            }

            // Update RO total
            $stmt = $this->db->prepare("
                UPDATE requisition_orders
                SET total_amount = ?
                WHERE ro_number = ?
            ");
            $stmt->execute([$totalAmount, $roNumber]);

            $this->db->commit();
            return $roNumber;
        } catch (Exception $e) {
            $this->db->rollBack();
            throw $e;
        }
    }

    public function get($roNumber) {
        $stmt = $this->db->prepare("
            SELECT ro.*, d.name as department_name
            FROM requisition_orders ro
            JOIN departments d ON ro.department_id = d.id
            WHERE ro.ro_number = ?
        ");
        $stmt->execute([$roNumber]);
        return $stmt->fetch(PDO::FETCH_ASSOC);
    }

    public function getItems($roNumber) {
        $stmt = $this->db->prepare("
            SELECT ri.*, i.name as item_name, i.unit_of_issue
            FROM requisition_items ri
            JOIN items i ON ri.item_id = i.id
            WHERE ri.ro_number = ?
        ");
        $stmt->execute([$roNumber]);
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    }

    public function list($status = null, $departmentId = null) {
        $sql = " SELECT 
                ro.*,
                d.name as department_name,
                COUNT(ri.id) as no_of_items
            FROM requisition_orders ro
            JOIN departments d ON ro.department_id = d.id
            LEFT JOIN requisition_items ri ON ro.ro_number = ri.ro_number
            WHERE 1=1
            GROUP BY ro.ro_number, ro.department_id, d.name, ro.total_amount, ro.status, ro.financial_year, ro.created_at, ro.updated_at
        ";
        $params = [];

        if ($status) {
            $sql .= " AND ro.status = ?";
            $params[] = $status;
        }

        if ($departmentId) {
            $sql .= " AND ro.department_id = ?";
            $params[] = $departmentId;
        }

        $sql .= " ORDER BY ro.created_at DESC";

        $stmt = $this->db->prepare($sql);
        $stmt->execute($params);
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    }

    public function updateStatus($roNumber, $status) {
        $stmt = $this->db->prepare("
            UPDATE requisition_orders
            SET status = ?
            WHERE ro_number = ?
        ");
        return $stmt->execute([$status, $roNumber]);
    }
}
